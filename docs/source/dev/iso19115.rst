=========
ISO 19115
=========

Overview
========

Metacatalog makes it possible to store metadata in ISO 19115 standard.
Some of the required information for ISO 19115 will be the same for the 
whole metacatalog instance, or, is specific to your installation and use 
case. Below is a table of ISO 19115 code lists, which are implemented 
and how they translate into metacatalog.

ISO 19115 Fields
================

ISO 19115, 19115-1, and 19115-2 define only a few mandatory (M) fields, but a long 
list of optional (O) and coditional (C) fields. In the table below you find a mapping 
of ISO names to metacatalog names. If the column *Code List* is filled, metacatalog 
makes use of published ISO 19115 CodeList values. In the section below you can find 
for every list, how the single values map into metacatalog.

MD_Metadata
-----------

.. list-table::
  :widths:  20 25 20 35
  :header-rows: 1

  * - ISO field
    - metacatalog
    - CodeList or Table
    - Cardinality
    - description
  * - fileIdentifier
    - Entry.id
    - 
    - [1]
    - will be Entry.uuid with next version
  * - language
    - ``'en-US'``
    - ISO 639-2 values are allowed
    - [1]
    - metacatalog is not multi-language and therefore a common value should be used
  * - characterSet
    - DataSource.encoding
    - MD_CharacterSetCode
    - [1]
    - Not yet implemented
  * - parentIdentifier
    - EntryGroup.id if Entry.is_partial
    - 
    - [0] or [1]
    - Only for partial Entries a Parent Entry is mandatory.
  * - hierachyLevel
    - ``'dataset'``
    - MD_ScopeCode
    - [1]
    - All other values are not applicable for metacatalog.
  * - hierachyLevelName
    - 
    - 
    - [0..*]
    - Conditional: not applicable if ``hierachyLevel == 'dataset'``
  * - contact
    - Entry.author | Entry.contributors
    - CI_ResponsibleParty, CI_RoleCode
    - [1..*]
    - In metacatalog, the first author is contact person. 
  * - dateStamp
    - Entry.lastUpdate
    - ISO 19103
    - [1]
    - either creation or last edit
  * - metadataStandardName
    - ``'ISO19115-2'``
    -  
    - [1]
    - As of now ISO is the only standard used. More can be added here
  * - metadataStandardVersion
    - ``ISO19115-2:2019'``
    -  
    - [1]
    - Not entirely sure about this
  * - locale
    - ``'en-US.utf8'``
    - ISO 19139
    - [0..*]
    - Not sure about the format
  * - metadataLinkageURL
    - 
    - 
    - [0..*]
    - The specific installation of metacatalog has to define this.
  * - spatialRepresentationInfo
    - 
    - MD_SpatialRepresentation
    - [0..*]
    - Recommended for INSPIRE topic 'elevation'
  * - referenceSystemInfo
    - 
    - MD_ReferenceSystem
    - [2]
    - In ISO this is optional, in INSPIRE [1..*] cardinality. not yet implemented
  * - metadataExtensionInfo
    - 
    - MD_MetadataExtensionInformation
    - [0..*]
    - Optional. not yet implemented
  * - identificationInfo
    - 
    - MD_Identification
    - [1..*]
    - Many possible. Only the first occarance is used for INSPIRE
  * - contentInfo
    - DataSourceType.name & Variable.name
    - MD_ContentInformation
    - [1..*]
    - this does not map exactly, but is optional in ISO anyway
  * - distributionInfo
    - 
    - MD_Distribution
    - [1]
    - INSPIRE requires distribution information. Has to be implemented by metacatalog admin.
  * - dataQualityInfo
    - 
    - DQ_DataQuality
    - [1..*]
    - not yet implemended
  * - portrayalCatalogueInfo
    - 
    - MD_PortrayalCatalogueReference
    - [0..*]
    - This has to be defined outside metacatalog.
  * - applicationSchemaInfo
    - 
    - MD_ApplicationSchema
    - [0]
    - Not sure if metacatalog can implement this at all.





Code-Lists
==========

Metacatalog mappings are based on the CodeList dictionaries published by NOAA

https://www.ngdc.noaa.gov/wiki/index.php/ISO_19115_and_19115-2_CodeList_Dictionaries#CI_DateTypeCode


CI_DateTypeCode
---------------

.. list-table:: 
  :widths: 25 25 50
  :header-rows: 1

  * - ISO
    - metacatalog
    - description
  * - creation
    - Entry.creation
    - start-date of the *data*
  * - publication
    - Entry.publication
    - creation date of the Entry record
  * - revision 
    - /
    - we use ISO 19115-2 lastUpdate
  * - adopted
    - n.a.
    - not applicable
  * - deprecated
    - /
    - not yet implemented
  * - distribution
    - n.a.
    - not applicable as metacatalog is a distribution system. Will be the same as ``publication`` here.
  * - expiry
    - n.a.
    - not applicable
  * - inForce
    - n.a.
    - not applicable
  * - lastRevision
    - /
    - not yet implemented
  * - lastUpdate
    - Entry.lastUpdate
    - updates on every edit
  * - nextUpdate
    - n.a.
    - not applicable
  * - release
    - n.a.
    - metacatalog is intended for open data
  * - superseded
    - /
    - not yet implemented
  * - unavailable
    - n.a.
    - not applicable
  * - validityBegins
    - n.a.
    - not applicable
  * - validityExpires
    - n.a.
    - not applicable

CI_PresentationFormCode
-----------------------

The definitions given in this list do not apply to environmental datasets. 
Depending on the metacatalog instance and the metadata stored, the 
CI_PresentationFormCode will apply to all data. If applicable it will be one of

* mapDigital
* modelDigital
* tableDigital
* physicalSample

You will have to implement this _after_ metacatalog has exported the 
:class:`Entry <metacatalog.models.Entry>` information.

CI_RoleCode
-----------
.. note::

  The full `CI_RoleCode Codelist <https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#CI_RoleCode>`_ 
  is implemented exactly into `metacatalog.PersonRole`.

.. csv-table:: Roles
   :file: ../../../metacatalog/data/person_roles.csv
   :widths: 20, 20, 60
   :header-rows: 1

DQ_EvaluationMethodTypeCode
---------------------------

The `DQ_EvaluationMethodTypeCode <https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#DQ_EvaluationMethodTypeCode>`_
list is not yet implemented.

DS_AssociationTypeCode
----------------------

The :class:`EntryGroup <metacatalog.models.EntryGroup>` maps some of the 
DS_AssociationTypeCode. 

.. list-table:: 
  :widths: 25 25 50
  :header-rows: 1

  * - ISO
    - metacatalog
    - description
  * - crossReference
    - n.a.
    - not applicable
  * - largerWorkCitation
    - :class:`EntryGroupType.name=='Project' <metacatalog.models.EntryGroupType>`
    - 'Citation' might be misleading here. This is only marking belonging.
  * - partOfSeamlessDatabase
    - `EntryGroupType.name=='Composite'`
    - by definition always true for composites.
  * - source
    - n.a.
    - not applicable, as metacatalog does not store dependencies if the data is an image
  * - stereoMate
    - /
    - not yet implemented
  * - collectiveTitle
    - :class:`EntryGroup.title <metacatalog.models.EntryGroup>`
    - for all :class:`Entry` of the Group. May apply only to projects
  * - dependency
    - :class:`Entry <metacatalog.models.Entry>` if :class:`Entry.is_partial==True <metacatalog.models.Entry>`
    - :class:`Entry.id <metacatalog.models.Entry>` of all :class:`Entry.is_partial==False <metacatalog.models.Entry>` for a partial Entry within the same composite
  * - isComposedOf
    - :class:`Entry.id <metacatalog.models.Entry>`
    - :class:`Entry.id <metacatalog.models.Entry>` of all child Entries for a EntryGroup
  * - revisionOf
    - /
    - not yet implemented
  * - series
    - n.a.
    - not applicable. This may apply to Entries that hold the same DataOrigin information. 

DS_InitiativeTypeCode
---------------------

The `InitiativeTypeCode List <https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#DS_InitiativeTypeCode>`_ 
does not apply to metacatalog. In cases you use a data platform around metacatalog, 
which can either return aggregated datasets or processing results or datasets 
that share a context, you have to implement this list to describe the type of 
dataset aggregation.

MD_CellGeometryCode
-------------------

The `MD_CellGeometryCode List <https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#MD_CellGeometryCode>`_ 
is extended in metacatalog by the :class:`Entry.location <metacatalog.models.Entry` 
and :class:`Entry.geom <metacatalog.models.Entry` properties.

.. note::
  
  Note that `MD_CellGeometryCode List <https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#MD_CellGeometryCode>`_
  is describing **grid cells**, therefore this section only applies if a list 
  of Entries or an EntryGroup is exported in a regular grid. 
  If this property should be applied to the data, the specific reader function
  has to extend the Entry
 
.. list-table:: 
  :widths: 25 25 50
  :header-rows: 1

  * - ISO
    - metacatalog
    - description
  * - point
    - :class:`Entry.location <metacatalog.models.Entry` 
    - location is always a point in metacatalog

MD_CharacterSetCode
-------------------

The characterset of the metacatalog database is always the same as metacatalog 
is not supporting multi-database installations. We recommend to use ``'utf-8'``.


MD_ClassificationCode
---------------------

The `MD_ClassificationCode List <https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#MD_ClassificationCode>`_ 
describes classified information. As metacatalog is designed for and dedicated to 
managing open data in an environmental context, this list does not apply.

However a :class:`Entry <metacatalog.models.Entry>` can be put into embargo for a 
limited amount of time. This defaults to two years after ``'publication'`` date.
An Entry under embargo is still ``'unclassified'`` following 
`MD_ClassificationCode List <https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#MD_ClassificationCode>`_ 
but just not visible in the system. 

MD_CoverageContentTypeCode
--------------------------

The `MD_CoverageContentTypeCode List <https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#MD_CoverageContentTypeCode>`_ 
is not yet implemented.

MD_DatatypeCode
---------------

The `MD_DatatypeCode List <https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#MD_DatatypeCode>`_ 
is not implemented yet, but will be available as a lookup value for data types.

MD_DimensionNameTypeCode
------------------------

The  `MD_DimensionNameTypeCode List <https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#MD_DimensionNameTypeCode>`_ 
does not apply to metacatalog, as the data can be more generalized than geometric dimensions.

MD_GeometricObjectTypeCode
--------------------------

The value is always ``'point'`` for :class:`Entry.location <metacatalog.models.Entry>`


MD_ImagingConditionCode
-----------------------

The `MD_ImagingConditionCode List <https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#MD_ImagingConditionCode>`_ 
is not yet implemented, but will be available optinally, to be linked to 
:class:`Detail <metacatalog.models.Detail>` information.

MD_KeywordTypeCode
------------------

The `MD_KeywordTypeCode <https://data.noaa.gov/resources/iso19139/schema/resources/Codelist/gmxCodelists.xml#MD_KeywordTypeCode>`_ 
is not yet implemented. Some of the keyword types can be used to specify the controlled 
keywords implemented as :class:`Keyword <metacatalog.models.Keyword>` and some might 
further specify :class:`Details <metacatalog.models.Detail>`. 
It will be decided with Version 0.2 of metacatalog how much of this information 
will be reflected within metacatalog.

